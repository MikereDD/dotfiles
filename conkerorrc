// Home Page
homepage = "http://m-redd.com";
// Style Sheets
// FaceBook
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/Face_Dark_Grey.css');
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/noadds_facebook.css');
//register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/facebook_round_tabs_3.css');
// Demonoid - PirateBay
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/demonoid_blue_theme.css');
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/demonoid_site_cleanup.css');
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/piratebay_addblock.css');
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/piratebay_clean_dark.css');
// CraigsList
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/craigslist_cleanup.css');
// Google - YouTube
//register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/crome_google.css');
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/dark_google_search.css');
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/scroogle_black.css');
//register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/youtube_dark_contrast.css');
//register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/youtube_dark_clean.css');
//register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/dark_tube.css');
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/dark_minimal_youtube.css');
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/youtube_mytweaks.css');
// Hulu
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/hulu_dark.css');
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/lr_hulu.css');
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/lightsout_hulu.css');
// Gmail
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/gmail_remove_adds.css');
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/hide_gmail.css');
// IMDB
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/imdb_dark.css');
// LastFM
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/paint-it-black-lastfm-v2.css');
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/lastfm_tranmenu.css');
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/lastfm_noadds.css');
// Forums
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/dark_forum.css');
// Misc
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/well_rounded.css');
register_user_stylesheet('file:///home/mredd/.conkeror.mozdev.org/styles/tabbar_mouse.css');
// Keybindings
var maps = Array(
    // Vimperator-like
    "j"   , "cmd_scrollLineDown",
    "k"   , "cmd_scrollLineUp",
    "h"   , "cmd_scrollLeft",
    "l"   , "cmd_scrollRight",
    "o"   , "find-url",
    "F"   , "follow-new-buffer",
    "t"   , "find-url-new-buffer",
    "C-i" , "go-forward",
    "C-o" , "go-back",
    "C-n" , "buffer-next",
    "C-p" , "buffer-previous",
    "d"   , "kill-current-buffer",
    "/"   , "isearch-forward",
    'y'   , "copy",
    // Eye guide
    "space", "eye-guide-scroll-down",
    "back_space", "eye-guide-scroll-up",
    // Vimperator-like eye guide :D
    "C-f" , "eye-guide-scroll-down",
    "C-b" , "eye-guide-scroll-up"
);

for (var i = 0; i < maps.length; i += 2)
    define_key(content_buffer_normal_keymap, maps[i], maps[i+1]);
// -*- mode: javascript -*- 
require("clicks-in-new-buffer.js");
clicks_in_new_buffer_target = OPEN_NEW_BUFFER_BACKGROUND;
can_kill_last_buffer = false;
editor_shell_command = "vim";
hints_auto_exit_delay = 1;
// Tabs
// Old Tabs
//require("tab-bar.js");
// New Tabs
require('new-tabs.js');

// Switch to Buffers 1-10 Using Number Keys 1 through 0
function define_key_buffer_switch(key, buf_num) {
    define_key(content_buffer_normal_keymap, key, function (I) {
        switch_to_buffer(I.window, I.window.buffers.get_buffer(buf_num));
    });
    define_key(download_buffer_keymap, key, function (I) {
        switch_to_buffer(I.window, I.window.buffers.get_buffer(buf_num));
    });
}
for (let i = 0; i < 10; ++i) {
    define_key_buffer_switch(i == 9 ? "0" : (i+1).toString(), i);
}
/// Web Jumps
// Bookmarks
define_webjump("bookmark",
               function (term) { return term; },
               $completer = history_completer($use_history = false,
                                              $use_bookmarks = true));

// ImageMagic
// magick-options is a webjump for imagemagick command line options.
//
// magick-options caches its completions in a preference.  To clear the cache
// and force magick-options to fetch the information anew, just do:
//
//   clear_pref('conkeror.webjump.magick-options.cache');
//
// last modified: February 8, 2009
//
function magick_options_completer (input, cursor_position, conservative) {
  function remove_duplicates_filter () {
    var acc = {};
    return function (x) {
      if (acc[x]) return false;
      acc[x] = 1;
      return true;
    };
  }
  var completions;
  try {
    completions = get_pref('conkeror.webjump.magick-options.cache').split(' ');
  } catch (e) { }
  if (! completions) {
    try {
      var content = yield send_http_request(
        load_spec({uri: "http://imagemagick.org/script/command-line-options.php"}));
      completions = content.responseText.match(/([a-z]+)(?=\">-\1<\/a>)/g).filter(remove_duplicates_filter());
      user_pref('conkeror.webjump.magick-options.cache', completions.join(' '));
    } catch (e) { }
  }
  yield co_return(
    prefix_completer($completions = completions)
    (input, cursor_position, conservative));
}

define_webjump("magick-options",
    "http://imagemagick.org/script/command-line-options.php#%s",
    $alternative = "http://imagemagick.org/script/command-line-options.php",
    $completer = magick_options_completer);

// arch Linux
define_webjump("archaur", "http://aur.archlinux.org/index.php?title=Special%3ASearch&ns0=1&search=%s&fulltext=Advanced+search");
define_webjump("archwiki", "http://wiki.archlinux.org/index.php?title=Special%3ASearch&ns0=1&search=%s&fulltext=Advanced+search");
define_webjump("archforum", "http://bbs.archlinux.org/index.php?title=Special%3ASearch&ns0=1&search=%s&fulltext=Advanced+search");

// Personal
define_webjump("galleryadmin", "https://shots.m-redd.com/*****");
define_webjump("mygithub", "http://github.com/MreDD");

// Facebook
define_webjump("facebook", "http://www.facebook.com/home.php");

// Newzbin - Torrent
define_webjump("newz", "https://www.newzbin.com/");
define_webjump("binsearch", "https://www.Binsearch.info");
define_webjump("tvnzb", "http://www.TVNZB.com");
define_webjump("nzbmatrix", "http://www.Nzbmatrix.com");i
define_webjump("nzbmovie", "http://www.nzbmovieseeker.com");
define_webjump("demonoid", "http://www.demonoid.com/");
define_webjump("piratebay", "https://www.piratebay.org/");
define_webjump("isohunt", "https://www.isohunt.com/");
define_webjump("torrentbox", "https://TorrentBox.com/");
define_webjump("valdis", "*******");

// IMDB - Rotten Tomatoes
define_webjump("imdb", "http://imdb.com/find?q=%s");
define_webjump("rottentomatoes", "http://www.rottentomatoes.com/search/full_search.php?search=%s");

// YouTube
define_webjump("youtube", "http://www.youtube.com/results?search_query=%s&search=Search");
define_webjump("youtube-user", "http://youtube.com/profile_videos?user=%s");

// Hulu
define_webjump("hulu", "http://www.hulu.com/search?query=%s");

// Last FM - Pandora
lastfm_user = "*****";
define_webjump("lastfm", "http://www.last.fm/user/" + lastfm_user);
define_webjump("lastfm-music", "http://www.last.fm/search?m=all&q=%s");
define_webjump("lastfm-event", "http://www.last.fm/events/search?search=1&q=%s");
define_webjump("lastfm-tag", "http://www.last.fm/search?m=tag&q=%s");
define_webjump("lastfm-user", "http://www.last.fm/users?m=search&type=un&q=%s");
define_webjump("lastfm-group", "http://www.last.fm/users/groups?s_bio=%s");
define_webjump("lastfm-label", "http://www.last.fm/search?m=label&q=%s");
define_webjump("mikegunnfm", "http://www.last.fm/listen/artist/The%2BMike%2BGunn/similarartists#pane=webRadioPlayer&station=%252Flisten%252Fartist%252FThe%252BMike%252BGunn%252Fsimilarartists");
define_webjump("pandora", "http://pandora.com");

// Weather
define_webjump("weather", "http://www.wunderground.com/cgi-bin/findweather/getForecast?query=%s");
define_webjump("recentquake", "http://quake.usgs.gov/recenteqs/Maps/Los_Angeles.html");

// Search Engines
define_webjump("scroogle", "http://www.scroogle.org/cgi-bin/nbbw.cgi?Gw=%s");
define_webjump("scrooglessl", "https://ssl.scroogle.org/cgi-bin/nbbwssl.cgi?Gw=%s");
define_webjump("codesearch", "http://www.google.com/codesearch?q=%s");

// Google Translate
define_webjump("trans", "http://translate.google.com/translate_t#auto|en|%s");
// Urban Dictionary
define_webjump("urban", "http://www.urbandictionary.com/define.php?term=%s");
// NetWork Tools
// Down for All but Me
define_webjump("down?", function (url) {
    if (url) {
        return "http://downforeveryoneorjustme.com/" + url;
    } else {
        return "javascript:window.location.href='http://downforeveryoneorjustme.com/'+window.location.href;";
   }
}, $argument = "optional");
// Way Back Machine
define_webjump("wayback", function (url) {
    if (url) {
        return "http://web.archive.org/web/*/" + url;
    } else {
        return "javascript:window.location.href='http://web.archive.org/web/*/'+window.location.href;";
    }
}, $argument = "optional");


// Follow Links in a New Buffer with a One-Key Binding
define_key(content_buffer_normal_keymap, "d", "follow-new-buffer");

// Hide Scroll Bars
function disable_scrollbars (buffer) {
    buffer.browser.contentWindow.scrollbars.visible = false;
}
add_hook ("content_buffer_location_change_hook", disable_scrollbars);

// Darken Page
function darken_page (I) {
    var newSS, styles='* { background: black ! important; color: grey !important }'
        + ':link, :link * { color: #4986dd !important }'
        + ':visited, :visited * { color: #d75047 !important }';

    var document = I.window.buffers.current.document;

    if (document.createStyleSheet) {
        document.createStyleSheet("javascript:'" + styles + "'");
    }
    else {
        newSS=document.createElement('link');
        newSS.rel='stylesheet';
        newSS.href='data:text/css,'+escape(styles);
        document.getElementsByTagName("head")[0].appendChild(newSS);
    }
}

interactive("darken-page", "Darken the page in an attempt to save your eyes.",
            darken_page);
define_key(content_buffer_normal_keymap, "C-d", "darken-page");

// Make the current page readable by removing clutter
// http://lab.arc90.com/experiments/readability/
interactive("readability_arc90",
            "Readability is a simple tool that makes reading on the web more enjoyable by removing the clutter around what you are reading",
            function readability_arc90(I) {
                var document = I.window.buffers.current.document;

                _readability_readStyle=document.createElement('SCRIPT');
                _readability_readStyle.text = 'var readStyle = style-newspaper;';
                document.getElementsByTagName('head')[0].appendChild(_readability_readStyle);
                _readability_readSize=document.createElement('SCRIPT');
                _readability_readSize.text = 'var readSize = size-medium;';
                document.getElementsByTagName('head')[0].appendChild(_readability_readSize);
                _readability_readMargin=document.createElement('SCRIPT');
                _readability_readMargin.text = 'var readMargin = margin-wide;';
                document.getElementsByTagName('head')[0].appendChild(_readability_readMargin);
                _readability_script=document.createElement('SCRIPT');
                _readability_script.type='text/javascript';
                _readability_script.src='http://lab.arc90.com/experiments/readability/js/readability.js?x='+(Math.random());
                document.getElementsByTagName('head')[0].appendChild(_readability_script);
                _readability_css=document.createElement('LINK');
                _readability_css.rel='stylesheet';
                _readability_css.href='http://lab.arc90.com/experiments/readability/css/readability.css';
                _readability_css.type='text/css';
                _readability_css.media='screen';
                document.getElementsByTagName('head')[0].appendChild(_readability_css);
                _readability_print_css=document.createElement('LINK');
                _readability_print_css.rel='stylesheet';
                _readability_print_css.href='http://lab.arc90.com/experiments/readability/css/readability-print.css';
                _readability_print_css.media='print';
                _readability_print_css.type='text/css';
                document.getElementsByTagName('head')[0].appendChild(_readability_print_css);
            });
define_key(content_buffer_normal_keymap, "z", "readability_arc90");
// Remember the last save directory for downloads
{
   let _save_path = get_home_directory();

   function update_save_path(info) {
       _save_path = info.target_file.parent.path;
   }

   add_hook("download_added_hook", update_save_path);

   suggest_save_path_from_file_name = function (filename, buffer) {
       let file = make_file(_save_path);
       file.append(filename);
       return file.path;
   }
}
// Default Zoom Level
function my_zoom_set (buffer) {
    browser_zoom_set(buffer, false, 100);
}
add_hook('create_buffer_hook', my_zoom_set);

// Url Remoting Multiple Targets
/* For url_remoting_fn; load in a new buffer.  If +u is given on the
 * command line, do so in the background. */
function load_url_in_new_buffer_perhaps_bg(url, ctx) {
    create_buffer_in_current_window(
        buffer_creator(content_buffer, $opener = ctx, $load = url),
        ctx.prefix_argument ? OPEN_NEW_BUFFER_BACKGROUND : OPEN_NEW_BUFFER,
        !ctx.prefix_argument);
}
// Create a TinyURL for the Current Buffer's URL
// last updated February 5, 2009
define_browser_object_class(
    "tinyurl", "TinyURL", "Get a tinyurl for the current page",
    function (I, prompt) {
        check_buffer(I.buffer, content_buffer);
        let createurl = 'http://tinyurl.com/api-create.php?url=' +
            encodeURIComponent(
                load_spec_uri_string(
                    load_spec(I.buffer.top_frame)));
        try {
            var content = yield send_http_request(
                load_spec({uri: createurl}));
            yield co_return(content.responseText);
        } catch (e) { }
    });

define_key(content_buffer_normal_keymap, "* q", "browser-object-tinyurl");
url_remoting_fn = load_url_in_new_buffer_perhaps_bg;
// Google Binds
require("page-modes/google-search-results.js");
google_search_bind_number_shortcuts();
// override google-search-results mode keybindings for navigation
var gs_maps = Array(
    "j"   , "cmd_scrollLineDown",
    "k"   , "cmd_scrollLineUp",
    "o"   , "find-url",
    "/"   , "isearch-forward"
);
for (var i = 0; i < gs_maps.length; i += 1)
    define_key(google_search_results_keymap, gs_maps[i], gs_maps[i+1]);

require('eye-guide.js');
require('wikipedia-didyoumean.js');

