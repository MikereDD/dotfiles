#---------------------------------------------------------------
# file:     ~/.tmux/conf
# author:   Mike Redd - http://m-redd.com/
# vim:fenc=utf-8:nu:ai:si:et:ts=4:sw=4:fdm=indent:fdn=1:ft=conf:
#---------------------------------------------------------------

# Global settings

# Set prefix key to Ctrl-a
unbind C-b
set -g prefix C-a

# Send the prefix to client inside window
bind C-a send-prefix

# Toggle last window like screen
bind-key C-a last-window

# Open a man page in new window
bind-key / command-prompt "split-window 'exec man %%'"

# Quick view of processes
bind-key "~" split-window "exec htop"

# Scrollback buffer n lines
set -g history-limit 5000

# Listen for activity on all windows
set -g bell-action any
#set -g bell-action none

# Start window indexing at zero (default)
set -g base-index 0

# Instructs tmux to expect UTF-8 sequences
#setw -g utf8 on

# Use the screen's 256color TERM by default.
set -g default-terminal "screen-256color"

# Translate keycodes to xterm keycodes!
setw -g xterm-keys on

# Control automatic window renaming
setw -g automatic-rename off

# Enable wm window titles
set -g set-titles on

# WM window title string (uses statusbar variables)
#set -g set-titles-string "tmux.#I.#W"

# Don't close windows. just deactivate them. use respawn-window to reactivate.
setw -g remain-on-exit on

# Restart panes/windows marked with remain-on-exit
bind C-r respawn-pane
bind R respawn-window

# Key bindings
# reload settings
bind-key E source-file ~/.tmux.conf

# Detach client
bind-key d detach
bind-key C-d detach

# Choose a client to detach
bind-key D choose-client

# Choose window/session
bind-key "'" choose-window
bind-key '"' choose-session

# Display visible indicator of each pane
bind-key w display-panes

# Navigate panes using jk, and ctrl+jk (no prefix)
bind-key -r j select-pane -t :.-
bind-key -r k select-pane -t :.+
bind-key -r C-j select-pane -t :.-
bind-key -r C-k select-pane -t :.+

# Navigate windows using hl, and ctrl-hl (no prefix)
bind-key -r h select-window -t :-
bind-key -r l select-window -t :+
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# Swap panes
bind-key -r J swap-pane -D
bind-key -r K swap-pane -U

# Ctrl-Left/Right cycles thru windows (no prefix)
bind-key -n "C-Left"  select-window -t :-
bind-key -n "C-Right" select-window -t :+

# Ctrl-Up/Down cyles thru panes (no prefix)
bind-key -n "C-Up"   select-pane -t :.-
bind-key -n "C-Down" select-pane -t :.+

# Cycle to next pane
bind-key -r Tab select-pane -t :.+

# Kill current pane/window
bind-key q confirm-before kill-pane
bind-key Q confirm-before kill-window
bind-key C-q confirm-before kill-pane

# Copying and pasting
bind-key [ copy-mode
bind-key ] paste-buffer -s \015

# Vi-style controls for copy mode
setw -g mode-keys vi

# List all paste buffers (default key is '#')
bind-key b list-buffers

# Choose buffer to paste interactively (default key was '=')
bind-key p choose-buffer

# Delete the most recently copied buffer of text (default key was '-')
bind-key x delete-buffer


# Screen-like key bindings

# New window
bind-key C-c new-window
bind-key c new-window

# Next
bind-key -r Space next-window
bind-key -r "C-Space" next-window

# Prev
bind-key BSpace previous-window

# Title (default key in tmux is ',')
bind-key A command-prompt "rename-window %%"

# Quit
bind-key \ confirm-before kill-server

# Displays
bind-key * list-clients

# Redisplay (default key in tmux is 'r')
#bind-key C-l refresh-client
#bind-key l refresh-client
bind-key r refresh-client

# Split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
#bind-key s split-window -v
#bind-key v split-window -h

# Alternatively, use better mnemonics for horizontal/vertical splits
bind-key - split-window -v
bind-key _ split-window -v
bind-key | split-window -h

# Resize panes like vim
bind-key -r < resize-pane -L 3
bind-key -r > resize-pane -R 3
bind-key -r + resize-pane -U 1
bind-key -r = resize-pane -D 1

# Statusbar settings
# Toggle statusbar
bind-key s set status

# Use vi-style key bindings in the status line
set -g status-keys vi

# Amount of time for which status line messages and other indicators
# are displayed. time is in milliseconds.
set -g display-time 2000

# Copy tmux buffer to clipboard
bind C-y run "tmux show-buffer | xsel -b"
# Move x clipboard into tmux paste buffer
bind C-p run "tmux set-buffer \"$(xsel -o)\"; tmux paste-buffer"

# Open %% man page
bind C-m command-prompt -p "Open man page for:" "new-window 'exec man %%'"

# On-screen time for display-panes in ms
set -g display-panes-time 2000

# Start window indexing at one instead of zero
set -g base-index 1

# Enable wm window titles
set -g set-titles on

# Enable auto renaming
setw -g automatic-rename on

# Border colours
set -g pane-border-fg colour236
set -g pane-active-border-fg colour248
set -g pane-active-border-bg colour233

# WM window title string (uses statusbar variables)
set -g set-titles-string "tmux:#I ⁝ #W ⁝"

# Reload tmux config
bind-key r source-file ~/.tmux.conf

# Initialize sessions
#bind-key P source-file ~/.tmux/mymux
#bind-key Z source-file ~/.tmux/dev
#bind-key X source-file ~/.tmux/edit

# Environment
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# statusbar --------------------------------------------------------------
#set -g window-status-format "#I:#W"
#set -g window-status-current-format "#I:#W"
#bind-key -t vi-editor Up history-up
#bind-key -t vi-editor Down history-down

set -g status-right centre # center align window list

# Wemux userlist
#set -g status-right "#(wemux status_users)"

# Statusbar starting in X or not
#if '[ -n "$DISPLAY" ]' 'source-file ~/.tmux/inx'
#if '[ -z "$DISPLAY" ]' 'source-file ~/.tmux/xless'

# Tab-like window switching. Uses the same keys mainstream terminals would use
# such as Ctrl-[Shift]-PGUP/PGDN, and adds Ctrl-INS to make a window along with
# Ctrl-DEL to close a window. If your terminal already has these hotkeys, it
# will eat the keycode before tmux gets it anyway. Having this here allows
# users of simple terminals to get native-feeling "tabs" through tmux.
bind -n C-PPage prev
bind -n C-NPage next
bind -n C-S-PPage swap-window -t -1
bind -n C-S-NPage swap-window -t +1

bind -n C-IC new-window
bind -n C-S-IC new-window
bind -n C-DC confirm-before -p "Are you sure you want to unlinkw -k to close this window?" "unlink-window -k"
bind -n C-S-DC unlink-window -k

# Meta-key binds
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-0 select-window -t 10


# Only resize windows to the size of the smallest attached viewer of the window,
# rather than the smallest attached viewer of the entire session. Without this,
# a small terminal viewing a different window of a given session will result in
# the other window the small terminal is not looking at also being resized.
setw -g aggressive-resize on

# Get rid of the timer for escape sequences so "ESC" in vim works as expected.
# Without this, pressing ESC and immediately hitting an arrow key will result
# in the cursor moving without entering command mode at all; essentially
# ignoring the escape.
set -s escape-time 0

# Status on top (1.7+ feature, patch required for 1.6)
set -g status-position top

# Allow the status bar to be
set -g status-bg default
set -g status-fg white

## Forced by tmux to use ignorant british spelling of color.
#set -g status-left "#[fg=colour245,bg=colour234,bold] #(echo \"\$USER\")@#h "
#set -g status-left-length 20
#set -g status-right ""
#setw -g window-status-format "#[fg=colour245,bg=colour234,bold]#I#[fg=colour250,bold]:#[fg=colour250,bold][#[default,fg=colour250,bg=colour234,bold]#W#[bold]] "
#setw -g window-status-current-format "#[fg=colour245,bg=color234,bold]#I#[fg=colour250,bold]:#[fg=colour245,bold][#[fg=colour250,bg=colour234,bold]#W#[fg=colour245,bold]] "

# Show email count in statusbar
#set -g status-left '#S | #(cat ~/.adminlh-mail.txt) ⁝'
#set -g status-left-length 32

# Show nowplaying, weather, uptime and loadavg in statusbar
set -g status-right '⁝ #(nowplaying) ⁝ Weather: #(sh ~/.i3/scripts/weather) ⁝ Uptime: #(uptime | cut -d " " -f4-5 | cut -d"," -f1) ⁝ #(cut -d " " -f1-3 /proc/loadavg) ⁝ %R ⁝ %d %b | #h'
set -g status-right-length 150

# Show window status activity in statusbar
set -g window-status-activity-attr bold
set -g window-status-format ' #I< #W ⁝'
set -g window-status-current-format '#I> #W ⁝'

# Border foreground color
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39

# Message colors
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold

# Status interval
set -g status-interval 5

# Activity
setw -g monitor-activity on
set -g visual-activity on

# Alternate
setw -g alternate-screen on

# Mouse binds
#set -g mouse-utf8 on

# Mouse binds resize
#set -g mouse-resize-pane on
#set -g mouse-select-pane on
# With this option on, you must hold shift when selecting text with the mouse.
#set -g mouse-select-window on

# Present a menu of URLs to open from the visible pane. sweet.
bind-key U capture-pane \; save-buffer ~/tmp/tmux-buffer \; split-window -l 10 "urlview ~/tmp/tmux-buffer"

# Numbering starts at 1
set -g base-index 1
set -g pane-base-index 1

# Powerline
#source $HOME/.config/powerline/bindings/tmux/powerline.conf

# Idle screensaver
#set -g lock-after-time 650
#set -g lock-command "/usr/bin/cmatrix -C blue"
#set -g lock-command "/usr/bin/pipes.sh -t 4"
#set -g lock-command "/usr/bin/pipesX.sh -t 4"
#set -g lock-command "~/bin/rain.sh"

# vim: set filetype=bash:
