# --- UZBL - config --- 

set prefix     = $HOME/.config

# --- Shortcuts / Aliases --- 

# --- Config related events (use the request function): --- 
# --- request BIND <bind cmd> = <command>
set bind            = request BIND
# --- request MODE_BIND <mode> <bind cmd> = <command> --- 
set mode_bind       = request MODE_BIND
# --- request MODE_CONFIG <mode> <key> = <value> --- 
set mode_config     = request MODE_CONFIG
# --- request ON_EVENT <EVENT_NAME> <command> --- 
set on_event        = request ON_EVENT
# --- request PROGRESS_CONFIG <key> = <value> --- 
set progress        = request PROGRESS_CONFIG
# --- request MODMAP <From> <To> --- 
set modmap          = request MODMAP
# --- request IGNORE_KEY <glob> --- 
set ignore_key      = request IGNORE_KEY
# --- request MODKEY_ADDITION <key1> <key2> <keyn> <result> --- 
set modkey_addition = request MODKEY_ADDITION

# --- Action related events (use the event function): --- 
# --- event TOGGLE_MODES <mode1> <mode2> ... <moden> --- 
set toggle_modes    = event TOGGLE_MODES

set set_mode        = set mode =
set set_status      = set status_message =
set shell_cmd       = sh -c

# --- Spawn path shortcuts. In spawn the first dir+path match is used in "dir1:dir2:dir3:executable" --- 
set scripts_dir     = $XDG_DATA_HOME/uzbl:@prefix/uzbl/:scripts


# --- Handlers --- 

# --- Hardcoded event handlers --- 

# --- These handlers can't be moved to the new event system yet as we don't --- 
# --- support events that can wait for a response from a script --- 
set cookie_handler      = talk_to_socket $XDG_CACHE_HOME/uzbl/cookie_daemon_socket
set scheme_handler      = sync_spawn @scripts_dir/scheme.py
set authentication_handler = sync_spawn @scripts_dir/auth.py

# --- Optional dynamic event handlers --- 

# --- Open link in new window --- 
#@on_event   NEW_WINDOW     sh 'uzbl-browser -u "$8"' %r
# --- Open in current window --- 
#@on_event   NEW_WINDOW     uri %s
# --- Open in new tab --- 
@on_event   NEW_WINDOW     event NEW_TAB %s

# --- Download handler --- 
@on_event   DOWNLOAD_REQUEST    spawn @scripts_dir/download.sh %s 

# --- Load start handler --- 
@on_event   LOAD_START     @set_status <span foreground="khaki">wait</span>
# Reset the keycmd on navigation --- 
@on_event   LOAD_START     @set_mode

# --- Load commit handlers --- 
@on_event   LOAD_COMMIT    @set_status <span foreground="green">recv</span>
@on_event   LOAD_COMMIT    spawn @scripts_dir/change_style.sh

# --- Load finish handlers --- 
@on_event   LOAD_FINISH    @set_status <span foreground="gold">done</span>
@on_event   LOAD_FINISH    spawn @scripts_dir/history.sh

# --- Switch to insert mode if a (editable) html form is clicked --- 
@on_event   FORM_ACTIVE    @set_mode insert
# Switch to command mode if anything else is clicked
@on_event   ROOT_ACTIVE    @set_mode command

# --- Example CONFIG_CHANGED event handler --- 
#@on_event  CONFIG_CHANGED print Config changed: %1 = %2

#Fix for Follow Links - Escape clear
@on_event ESCAPE @set_mode
@on_event ESCAPE js var elements = doc.getElementById('uzbl_link_hint_div_container'); if (elements) { elements.parentNode.removeChild(elements); }

@bind <Escape> = event ESCAPE


# --- Behaviour and appearance --- 

set show_status       = 1
set status_top        = 0
set status_background = #303030

set modcmd_style      = weight="bold" foreground="red"
set keycmd_style      = weight="light" foreground="red"
set prompt_style      = foreground="grey"
set cursor_style      = underline="single"
set completion_style  = foreground="green"
set hint_style        = weight="bold"

set mode_section      = <span background="khaki" foreground="black">[\@[\@mode_indicator]\@]</span>
set keycmd_section    = [<span \@prompt_style>\@[\@keycmd_prompt]\@</span><span \@modcmd_style>\@modcmd</span><span \@keycmd_style>\@keycmd</span><span \@completion_style>\@completion_list</span>]
set progress_section  = <span foreground="#606060">\@[\@progress_format]\@</span>
set scroll_section    = <span foreground="#606060">\@[\@scroll_message]\@</span>
set uri_section       = <span foreground="#99FF66">\@[\@uri]\@</span>
set name_section      = <span foreground="khaki">\@[\@NAME]\@</span>
set status_section    = <span foreground="orange">\@status_message</span>
set selected_section  = <span foreground="#606060">\@[\@SELECTED_URI]\@</span>

set status_format     = <span font_family="monospace">@mode_section @keycmd_section @progress_section @uri_section @name_section @status_section @scroll_section @selected_section</span>

set title_format_long = \@keycmd_prompt \@raw_modcmd \@raw_keycmd \@TITLE - Uzbl browser <\@NAME> \@SELECTED_URI

# --- Progress bar config --- 
@progress width    = 8
# %d = done, %p = pending %c = percent done, %i = int done, %s = spinner,
# %t = percent pending, %o = int pending, %r = sprite scroll
@progress format   = [%d>%p]%c
@progress done     = =
@progress pending  =

# --- Or ride those spinnas --- 
#@progress format   = [%d%s%p]
#@progress spinner  = -\\|/
#@progress done     = -
#@progress pending  =


# --- Core settings --- 

set useragent         = Uzbl (Webkit @{WEBKIT_MAJOR}.@{WEBKIT_MINOR}.@{WEBKIT_MICRO}) (@(+uname -sm)@ [@ARCH_UZBL]) (Commit @COMMIT)
set fifo_dir          = /tmp
set socket_dir        = /tmp


# --- Key modmapping and ignoring --- 

#modmap <From>          <To>
@modmap <Control>       <Ctrl>
@modmap <ISO_Left_Tab>  <Shift-Tab>
@modmap <space>         <Space>

#modkey_addition <Key1>  <Key2>    <Result>
@modkey_addition <Shift> <Ctrl>    <Meta>
@modkey_addition <Shift> <Tab>     <Shift-Tab>
@modkey_addition <Shift> <Insert>  <Shift-Insert>

#ignore_key <glob>
@ignore_key <ISO_*>
@ignore_key <Shift>


# --- Mode bind aliases --- 

# --- Global binding alias (this is done automatically inside the bind plugin) --- 
#set bind = @mode_bind global

# --- Insert mode binding alias --- 
set ibind = @mode_bind insert

# --- Command mode binding alias --- 
set cbind = @mode_bind command

# --- Non-insert mode bindings alias (ebind for edit-bind) --- 
set ebind = @mode_bind global,-insert


# --- Global & keycmd editing binds --- 

# --- Resets keycmd and returns to default mode --- 
@on_event  ESCAPE    @set_mode
@bind   <Escape>     = event ESCAPE
@bind   <Ctrl>[      = event ESCAPE

# --- Commands for editing and traversing the keycmd --- 
@ebind  <Return>     = event KEYCMD_EXEC_CURRENT
@ebind  <Home>       = event SET_CURSOR_POS 0
@ebind  <End>        = event SET_CURSOR_POS -1
@ebind  <Left>       = event SET_CURSOR_POS -
@ebind  <Right>      = event SET_CURSOR_POS +
@ebind  <BackSpace>  = event KEYCMD_BACKSPACE
@ebind  <Delete>     = event KEYCMD_DELETE
@ebind  <Tab>        = event START_COMPLETION
# --- Readline-ish bindings --- 
@ebind  <Ctrl>w      = event KEYCMD_STRIP_WORD
@ebind  <Ctrl>u      = event SET_KEYCMD
@ebind  <Ctrl>a      = event SET_CURSOR_POS 0
@ebind  <Ctrl>e      = event SET_CURSOR_POS -1

# --- Keycmd injection/append examples --- 
#@ebind  <Ctrl>su = event INJECT_KEYCMD \@uri
#@ebind  <Ctrl>st = event INJECT_KEYCMD \@title
#@ebind  <Ctrl>du = event APPEND_KEYCMD \@uri
#@ebind  <Ctrl>dt = event APPEND_KEYCMD \@title


# --- Mouse bindings --- 

# --- Middle click open in new window --- 
#@bind  <Button2>  = sh 'if [ "\@SELECTED_URI" ]; then uzbl-browser -u "\@SELECTED_URI"; else echo "uri $(xclip -o | sed s/\\\@/%40/g)" > $4; fi'
@bind  <Button2>  = sh 'if [ "\@SELECTED_URI" ]; then echo "event NEW_TAB \@SELECTED_URI" > $4; fi'

# --- Keyboard bindings --- 

# With this command you can enter in any command at runtime when prefixed with
# a colon.
@cbind    :_        = %s

# --- Page movement binds ---
@cbind  j            = scroll vertical 20
@cbind  k            = scroll vertical -20
@cbind  h            = scroll horizontal -20
@cbind  l            = scroll horizontal 20
@cbind  <Ctrl>u      = scroll vertical -50%
@cbind  <Ctrl>d      = scroll vertical 50%
@cbind  <Ctrl>b      = scroll vertical -100%
@cbind  <Ctrl>f      = scroll vertical 100%
@cbind  gg           = scroll vertical begin
@cbind  G            = scroll vertical end
@cbind  ^            = scroll horizontal begin
@cbind  0            = scroll horizontal begin
@cbind  $            = scroll horizontal end

# --- Navigation binds ---
@cbind  H        = back
@cbind  L        = forward
@cbind  <Ctrl>c  = stop
@cbind  r        = reload
@cbind  R        = reload_ign_cache

# --- Zoom binds ---
@cbind  +   = zoom_in
@cbind  -   = zoom_out
@cbind  T   = toggle_zoom_type
@cbind  1   = set zoom_level = 1.0
@cbind  2   = set zoom_level = 2.0

# --- Appearance binds ---
@cbind  _t   = toggle_status

# --- Page searching binds ---
@cbind  /*  = search %s
@cbind  ?*  = search_reverse %s
# Jump to next and previous items
@cbind  n   = search
@cbind  N   = search_reverse

# --- Uzbl tabbed binds ---
# --- Tab opening --- 
@cbind  gN              = event NEW_TAB
@cbind  t<uri:>_        = event NEW_TAB %s
@cbind  gp              = sh 'echo "event NEW_TAB `xclip -selection primary -o`" > $4'
# --- Closing / resting --- 
@cbind  dc                 = exit
@cbind  dC             = event CLEAN_TABS
# --- Closing / resting ---
@cbind  gC              = exit
@cbind  gQ              = event CLEAN_TABS

# --- Tab navigating ---
@cbind  g<              = event FIRST_TAB
@cbind  g>              = event LAST_TAB
@cbind  <Ctrl>n         = event NEXT_TAB
@cbind  <Ctrl>p         = event PREV_TAB
@cbind  gt<index:>_     = event GOTO_TAB %s

# ---Preset loading ---
set preset = event PRESET_TABS
@cbind  gs<preset save:>_   = @preset save %s
@cbind  glo<preset load:>_  = @preset load %s
@cbind  gd<preset del:>_    = @preset del %s
@cbind  gli                 = @preset list

# --- General tabbing options ---
set show_tablist            = 1
set show_gtk_tabs           = 0
set tablist_top             = 0
set gtk_tab_pos             = top
set gtk_refresh             = 1000
set switch_to_new_tabs      = 1
set capture_new_windows     = 1
set multiline_tabs          = 1
#
# --- Tab title options ---
set tab_titles              = 0
set tab_indexes             = 1
set new_tab_title           = Loading
set max_title_len           = 50
set show_ellipsis           = 1
#
# --- Session options ---
set save_session            = 1
set json_session            = 1
set session_file            = $HOME/.local/share/uzbl/session
#
# --- Inherited uzbl options ---
set fifo_dir                = /tmp
set socket_dir              = /tmp
set icon_path               = $HOME/.local/share/uzbl/uzbl.png
set status_background       = #454a57
#
# --- Misc options ---
set window_size             = 800,800
set verbose                 = 1
#
# And uzbl_tabbed.py takes care of the actual binding of the commands via each
# instances fifo socket.
#
# --- Custom tab styling ---
set tab_colors             = foreground="#607c5a" background="#202020"
set tab_text_colors        = foreground="#7995a6" 
set selected_tab            = foreground="#8eabab" background="#3f3333"
set selected_tab_text       = foreground="#cf632d"
set tab_indicate_https      = 1
set https_colors           = foreground="#888" background="#1e1c1c"
set https_text_colors      = foreground="#9c8e2d"
set selected_https          = foreground="#d74ecc" background="#3f3333"
set selected_https_text     = foreground="gold"

# --- Web searching binds ---
# --- Google --- 
@cbind  :gG<Google:>_= uri http://www.google.us/search?ie=utf-8&oe=utf-8&safe=off&q=\@<encodeURIComponent(%r)>\@
@cbind  :gs<Google Search:>_= uri http://www.google.us/search?ie=utf-8&oe=utf-8&safe=off&q=\@<encodeURIComponent(%r)>\@
@cbind  :gi<Google Images:>_= uri http://www.google.us/images?ie=utf-8&oe=utf-8&safe=off&q=\@<encodeURIComponent(%r)>\@
@cbind  :sc<Scroogle:>_     = uri https://ssl.scroogle.org/cgi-bin/nbbwssl.cgi?Gw=\@<encodeURIComponent(%r)>\@
@cbind  :wa<Wolfram Alpha:>_= uri http://www.wolframalpha.com/input/?i=\@<encodeURIComponent(%r)>\@
@cbind  :stan<Stanford Encyclopedia of Philosophy:>_   = uri http://plato.stanford.edu/search/searcher.py?query=\@<encodeURIComponent(%r)>\@
@cbind  :wiki<Wikipedia:>_  = uri http://en.wikipedia.org/w/index.php?title=Special:Search&search=\@<encodeURIComponent(%r)>\@&go=Go

# --- IMDb --- 
@cbind  :imdb<IMDb:>_ = uri http://www.imdb.com/find?s=all&q=%s

# --- Newzbin --- 
@cbind  :newzan<NewzBinAnime:>_ = uri https://v3.newzbin.com/search/query/?q=%s&area=c.11&fpn=p&searchaction=Go&category=11&areadone=c.11
@cbind  :newzap<NewzBinApp:>_ = uri https://v3.newzbin.com/search/query/?q=%s&area=c.1&fpn=p&searchaction=Go&category=1&areadone=c.1
@cbind  :newzbk<NewzBinBooks:>_ = uri https://v3.newzbin.com/search/query/?q=%s&area=c.13&fpn=p&searchaction=Go&category=13&areadone=c.13
@cbind  :newzmo<NewzBinMovies:>_ = uri https://v3.newzbin.com/search/query/?q=%s&area=c.6&fpn=p&searchaction=Go&category=6&areadone=c.6
@cbind  :newzmu<NewzBinMusic:>_ = uri https://v3.newzbin.com/search/query/?q=%s&area=c.7&fpn=p&searchaction=Go&category=7&areadone=c.7
@cbind  :newztv<NewzBinTV:>_ = uri https://v3.newzbin.com/search/query/?q=%s&area=c.8&fpn=p&searchaction=Go&category=8&areadone=c.8

# --- NZBMatrix --- 
@cbind  :nzbman<NZBMatrixAnime:>_ = http://nzbmatrix.com/nzb.php?category=Anime
@cbind  :nzbmap<NZBMatrixApps:>_ = uri http://nzbmatrix.com/nzb.php?cat=18
@cbind  :nzbmabk<NZBMatrixABooks:>_ = uri http://nzbmatrix.com/nzb.php?cat=49
@cbind  :nzbmebk<NZBMatrixEBooks:>_ = uri http://nzbmatrix.com/nzb.php?cat=36
@cbind  :nzbmga<NZBMatrixGames:>_ = uri http://nzbmatrix.com/nzb.php?cat=10
@cbind  :nzbmmo<NZBMatrixMovie:>_ = uri http://nzbmatrix.com/nzb.php?cat=2
@cbind  :nzbmmu<NZBMatrixMusic:>_ = uri http://nzbmatrix.com/nzb.php?category=Music
@cbind  :nzbmtv<NZBMatrixTV:>_ = uri http://nzbmatrix.com/nzb.php?cat=6

# --- Technical information sources --- 
@cbind  :awiki<Arch Linux Wiki:>_         = uri http://wiki.archlinux.org/index.php/Special:Search?search=\@<encodeURIComponent(%r)>\@&go=Go
@cbind  :aforu<Arch Linux Forum:>_        = uri http://bbs.archlinux.org/search.php?action=search&author=&forum=-1&search_in=all&sort_by=0&sort_dir=DESC&show_as=topics&search=Submit&keywords=\@<encodeURIComponent(%r)>\@
@cbind  :ntg<ConTeXt User List:>_  = uri http://www.google.com/search?&source=hp&ie=utf-8&oe=utf-8&safe=off&q=site:http://www.ntg.nl/pipermail/ntg-context/+\@<encodeURIComponent(%r)>\@
@cbind  :ct<ConTeXt Wiki:>_        = uri http://wiki.contextgarden.net/Special:Search?search=\@<encodeURIComponent(%r)>\@
@cbind  :vim<Vim Wiki:>_           = uri http://vim.wikia.com/wiki/Special:Search?search=\@<encodeURIComponent(%r)>\@

# ---Geo tools ---
@cbind  :mapg<Google Maps:>_       = uri http://maps.google.com/?safe=no&lang=en&q=\@<encodeURIComponent(%r)>\@
@cbind  :mapo<Open Street Map:>_   = uri http://www.openstreetmap.org/?query=\@<encodeURIComponent(%r)>\@&commit=Go
@cbind  :mapw<Wikimapia:>_         = uri http://wikimapia.org/#l=0&search=\@<encodeURIComponent(%r)>\@
@cbind  :mapw<Wikimapia:>_         = uri http://wikimapia.org/#l=0&search=\@<encodeURIComponent(%r)>\@

# ---Libraries ---
@cbind  :heidi<Heidi (UBHD):>_ = uri http://katalog.ub.uni-heidelberg.de/cgi-bin/search.cgi?sprache=GER&fsubmit=ok&query=\@<encodeURIComponent(%r)>\@
@cbind  :boo<Google Books:>_   = uri http://books.google.com/books?q=\@<encodeURIComponent(%r)>\@&btnG=Search+Books
@cbind  :zbroj<Zbrojnice:>_    = uri http://library.upol.cz/i2/i2.search.cls?ictx=upol&iset=2&term=\@<encodeURIComponent(%r)>\@
@cbind  :arch<Internet Archive:>_  = uri http://www.archive.org/search.php?query=\@<encodeURIComponent(%r)>\@

# --- Handy binds ---
# Set function shortcut
@cbind  s<var:>_<value:>_  = set %1 = %2
# Exit binding
@cbind  ZZ                 = exit
# Dump config to stdout
@cbind  !dump              = sh "echo dump_config > $4"
# Reload all variables in the config
@cbind  !reload            = sh "sed '/^# === Post-load misc commands/,$d' $1 | grep '^set ' > $4"

# Use socat to directly inject commands into uzbl-core and view events
# raised by uzbl-core:
@cbind  <Ctrl><Alt>t  = sh 'xterm -e "socat unix-connect:$5 -"'
#@cbind  <Ctrl><Alt>t  = sh 'urxvt -e socat unix-connect:$5 -'

# --- Uri opening prompts ---
@cbind  o<uri:>_       = uri %s
# Or have it load the current uri into the keycmd for editing
@cbind  O<uri:\@uri>_  = uri %s

# --- Mode setting binds ---
# Changing mode via  set.
@cbind  I  = @set_mode insert
# Or toggle between modes by raising the toggle event.
set toggle_cmd_ins = @toggle_modes command insert
@cbind  i          = @toggle_cmd_ins
# And the global toggle bind.
@bind   <Ctrl>i    = @toggle_cmd_ins

# --- Hard-bound bookmarks ---
@cbind  gh  = uri http://www.uzbl.org

# --- Yanking & pasting binds ---
@cbind  yy  = sh 'echo -n $6 | xclip'
@cbind  YY  = sh 'echo -n $6 | xclip -selection clipboard'
@cbind  yt  = sh 'echo -n $7 | xclip'
@cbind  YT  = sh 'echo -n $7 | xclip -selection clipboard'

# Go the page from primary selection
@cbind  p   = sh 'echo "uri `xclip -selection primary -o`" > $4'
# Go to the page in clipboard
@cbind  P   = sh 'echo "uri `xclip -selection clipboard -o`" > $4'
# Start a new uzbl instance from the page in primary selection
@cbind  'p  = sh 'exec uzbl-browser --uri $(xclip -o)'
@cbind  'P  = sh 'exec uzbl-browser --uri $(xclip -selection clipboard -o)'
# paste primary selection into keycmd at the cursor position
@bind <Shift-Insert> = sh 'echo "event INJECT_KEYCMD `xclip -o | sed s/\\\@/%40/g`" > $4'

# --- Bookmark inserting binds ---
@cbind <Ctrl>b<tags:>_  = sh 'echo -e "$6 %s" >> $XDG_DATA_HOME/uzbl/bookmarks'
# Or use a script to insert a bookmark.
@cbind  B  = spawn @scripts_dir/insert_bookmark.sh

# --- Bookmark/history loading ---
@cbind  U  = spawn @scripts_dir/load_url_from_history.sh
@cbind  u  = spawn @scripts_dir/load_url_from_bookmarks.sh

# --- Link following (similar to vimperator and konqueror) ---
# Set custom keys you wish to use for navigation. Some common examples:
set follow_hint_keys = 0123456789
#set follow_hint_keys = qwerty
#set follow_hint_keys = asdfghjkl;
#set follow_hint_keys = thsnd-rcgmvwb/;789aefijkopquxyz234
@cbind  fl*  = script @scripts_dir/follow.js '@follow_hint_keys %s'

# --- Form filler binds ---
# This script allows you to configure (per domain) values to fill in form
# fields (eg login information) and to fill in these values automatically.
# This implementation allows you to save multiple profiles for each form
# (think about multiple accounts on some website).
set formfiller = spawn @scripts_dir/formfiller.sh
@cbind  za  = @formfiller add
@cbind  ze  = @formfiller edit
@cbind  zn  = @formfiller new
@cbind  zl  = @formfiller load

# --- Examples ---
# Example showing how to use uzbl's fifo to execute a command.
#@bind  X1 = sh 'echo "set zoom_level = 1.0" > "$4"'
#@bind  X2 = sh 'echo "js alert (\\"This is sent by the shell via a fifo\\")" > "$4"'


# --- Context menu items --- 

# --- Default context menu --- 
menu_add Google = set uri = http://google.com
menu_add Go Home = set uri = http://uzbl.org
menu_separator separator_1
menu_add Home = set uri = http://m-redd.com
menu_add Git = set uri = http://github.com
menu_separator separator_1
menu_add Quit uzbl = exit

# --- Link context menu --- 
menu_link_add Print Link = print \@SELECTED_URI


# --- Mode configuration --- 

# --- Define some mode specific uzbl configurations --- 
set command  = @mode_config command
set insert   = @mode_config insert
set stack    = @mode_config stack

# --- Command mode config --- 
@command  keycmd_style        = foreground="red"
@command  status_background   = #202020
@command  mode_indicator      = Cmd

# --- Insert mode config --- 
@insert   status_background   = #303030
@insert   mode_indicator      = Ins

# --- Multi-stage-binding mode config --- 
@stack    keycmd_events       = 1
@stack    modcmd_updates      = 1
@stack    forward_keys        = 0
@stack    keycmd_style        = foreground="red"
@stack    prompt_style        = foreground="#888" weight="light"
@stack    status_background   = #202020
@stack    mode_indicator      = Bnd

set default_mode = command


# --- Post-load misc commands --- 

# --- Set the "home" page --- 
set uri = m-redd.com
